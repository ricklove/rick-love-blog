{"kind":"ImportDeclaration","raw":"import React, { ReactNode } from 'react';"}
{"kind":"ImportDeclaration","raw":"\r\nimport { useStaticQuery, graphql } from 'gatsby';"}
{"kind":"ImportDeclaration","raw":"\r\nimport { Header } from './header';"}
{"kind":"ImportDeclaration","raw":"\r\nimport './layout.css';"}
{"kind":"TypeAliasDeclaration","raw":"\r\n\r\n\r\n// Use a strong type\r\ntype BlogPostTemplateQuery = {\r\n    markdownRemark: {\r\n        id: string;\r\n        html: string;\r\n        excerpt: string;\r\n        frontmatter?: {\r\n            title?: string;\r\n            // Function calls: date(formatString: \"DD MMMM YYYY\")\r\n            date?: string & { __formatString: `DD MMMM YYYY` };\r\n            path?: string;\r\n            author?: string;\r\n            excerpt?: string;\r\n            tags?: string[];\r\n            coverImage?: {\r\n                childImageSharp: {\r\n                    // Function calls: fluid(maxWidth: 800)\r\n                    fluid(maxWidth: 800): {\r\n                        // ...GatsbyImageSharpFluid\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    };\r\n};"}
{"kind":"FirstStatement","raw":"\r\n\r\n// Target Generated Code:\r\nconst useBlogPostTemplateQuery = (): BlogPostTemplateQuery => {\r\n    return useStaticQuery(graphql`\r\n    query BlogPostTemplateQuery {\r\n        markdownRemark {\r\n            id\r\n            html\r\n            excerpt\r\n            frontmatter {\r\n                title\r\n                date(formatString: \"DD MMMM YYYY\")\r\n                path\r\n                author\r\n                excerpt\r\n                tags\r\n                coverImage {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 800) {\r\n                            ...GatsbyImageSharpFluid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`);\r\n};"}
{"kind":"FirstStatement","raw":"\r\n\r\n\r\nexport const BlogPost = ({ children }: { children: ReactNode }) => {\r\n\r\n    const data = useBlogPostTemplateQuery();\r\n    return (\r\n        <>\r\n            {data.markdownRemark.frontmatter && (\r\n                <>\r\n                    <div>{data.markdownRemark.frontmatter.title}</div>\r\n                    <div>{data.markdownRemark.frontmatter.author}</div>\r\n                    <div>{data.markdownRemark.frontmatter.date}</div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};"}
{"kind":"EndOfFileToken","raw":"\r\n"}
